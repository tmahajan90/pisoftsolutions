# Multi-stage build for production
FROM ruby:3.2.3-alpine AS builder

# Install build dependencies
RUN apk add --no-cache \
    build-base \
    postgresql-dev \
    nodejs \
    npm \
    git \
    tzdata

# Install yarn
RUN npm install -g yarn

# Set working directory
WORKDIR /app

# Copy Gemfile and Gemfile.lock
COPY Gemfile Gemfile.lock ./

# Install Ruby gems
RUN bundle config set --local without 'development test' && \
    bundle install --jobs 4 --retry 3

# Copy the rest of the application
COPY . .

# Precompile assets
RUN bundle exec rails assets:precompile RAILS_ENV=production

# Production stage
FROM ruby:3.2.3-alpine

# Install runtime dependencies
RUN apk add --no-cache \
    postgresql-client \
    postgresql-dev \
    tzdata \
    nodejs \
    npm \
    tzdata

# Create a non-root user
RUN addgroup -g 1000 -S rails && \
    adduser -u 1000 -S rails -G rails

# Set working directory
WORKDIR /app

# Copy gems from builder stage
COPY --from=builder /usr/local/bundle /usr/local/bundle

# Copy application from builder stage
COPY --from=builder /app /app

# Set ownership to rails user
RUN chown -R rails:rails /app

# Switch to rails user
USER rails

# Add a script to be executed every time the container starts
COPY --chown=rails:rails entrypoint.sh /usr/bin/
RUN chmod +x /usr/bin/entrypoint.sh
# ENTRYPOINT ["/usr/bin/entrypoint.sh"]

# Expose port
EXPOSE 3000

# Start the main process
CMD ["rails", "server", "-b", "0.0.0.0", "-e", "production"]
